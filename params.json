{"name":"Nozzle","tagline":"a set of cake traits for uniform project bootstrap and homogeneus improvement of frequently used features","body":"Install with\r\n\r\n```scala\r\nlibraryDependencies += \"io.buildo\" %% \"base\" % <version>\r\n```\r\n\r\n## Provided traits\r\n\r\n*ConfigModule* provides configuration facilities\r\n\r\n```scala\r\nprivate[this] case class LocalConfig(beAwesome: Boolean)\r\n\r\nprivate[this] val localConfig = config.get { conf =>\r\n  LocalConfig(conf.getBoolean(\"beAwesome\"))\r\n}\r\n```\r\n\r\nIt requires, in the launcher\r\n\r\n```scala\r\noverride def projectName = \"<project name>\"\r\n```\r\n\r\nwhich sets the namespace for the basic config options, like logging.\r\n\r\n**JsonSerializerModule** and **MonadicCtrlJsonModule** provide a facility for monadic control in controllers and automatic marshalling of responses / results. Refer to hailadoc on how to use this correctly.\r\n\r\n**Router** provides basic facilities for routers. Refer to hailadoc.\r\n\r\n**Boot** provides default initialization routines, in your project use the following:\r\n\r\n```scala\r\nprivate val log = logger(\"Boot\")\r\nval b = boot()\r\nimport b._\r\n```\r\n\r\n**LoggingModule** provides logging facilities. You can enable logging for additional logger names by overriding `logsEnabled`:\r\n\r\n```scala\r\noverride def logsEnabled(name: Name, level: io.buildo.base.logging.Level)\r\n```\r\n\r\n**MonadicRouterHelperModule** provides helper to write compact, easy-to-read routes. Refer to hailadoc.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}